#!/usr/bin/env perl

use strict;
use warnings;
no warnings 'uninitialized';
use Getopt::Long;
use Benchmark;
use Carp;
use Data::Dumper;
use Scalar::Util qw(looks_like_number);

my ($chr, $type, $help);

GetOptions(
    'c|chr=s'       =>  \$chr,
    't|type=s'      =>  \$type,
    'h|help'	    =>  \$help,
);

($type && $chr && !$help) or die <<USAGE;
    Usage: $0 -c chromosome -t snp_or_indel
USAGE

my $dir = '/nfs/users/nfs_j/jm23/jm23/scratch/vcf_annotation';
my $snp_file = "$dir/snp_chr_pos_mouse_sort_all.txt";
my $chr_file = "$dir/remapping/chr$chr\_$type\_remapping_38";
#my $chr_file = "$dir/remapping/zzzzz_remap";
my $out_file = "$dir/remapping/chr$chr\_$type\_final_mapping_37";
#my $out_file = "$dir/remapping/zzzzz_remap_final_mapping_37";

#INPUTS
#1, from assembly remapping:
#chromosome:NCBIM37:1:3000054:3000054:1,chromosome:GRCm38:1:3009973:3009973:1
#chromosome:NCBIM37:1:3000093:3000093:1,chromosome:GRCm38:1:3010012:3010012:1
#2, from snp_chr_pos_mouse_sort_all.txt.gz:
#1       3001489 rs31521921
#1       3001578 rs30468828
#
#Need to replace the pos in 2 with the pos in 1
#[Split on ','; take [0] and [1]; split on ':'; take [3] (pos and subtract 1); add to hash key = [1][3], value = [0][3]]
#Read file split line on "\t" - check if chr = $chr, then look in hash for [1]. If found, print to new pos_file....

open CHR, "<", $chr_file;
my %relmap;
while ( <CHR> ) {
    chomp;
    my @rels = split(',', $_);
    if ( scalar @rels == 2) {
		my $key = (split(':', $rels[1]))[3] - 1;
		my $value = (split(':', $rels[0]))[3];
		$relmap{$key} = $value;
	}
}
close CHR;

open OUTF, ">", $out_file;

open SNP, "<", $snp_file;
while ( <SNP> ) {
	chomp;
    my @mapping = split("\t", $_);
    if ( (looks_like_number($mapping[0]) && looks_like_number($chr) && $mapping[0] == $chr) || (!looks_like_number($mapping[0]) && (!looks_like_number($chr)) && $mapping[0] eq $chr) ) {
	    if ( $relmap{$mapping[1]} ) {
			my $pos = $relmap{$mapping[1]};
			print OUTF "$mapping[0]\t$pos\t$mapping[2]\n";
		}
	}
}    
close SNP;
close OUTF;
